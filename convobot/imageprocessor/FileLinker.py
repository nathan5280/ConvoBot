import os
from convobot.imageprocessor.ThetaSorter import ThetaSorter

class FileLinker(object):
    '''
    Create a tree structure of each of the label groups with links back to the physical files.
    '''
    def __init__(self, dst_path, sorter):
        '''
        Inputs:
            dst_path: root of the tree structure of labeled data.
            sorter: source of the files to link to the label.
        '''
        self._dst_path = dst_path
        if not os.path.exists(self._dst_path):
            os.makedirs(dst_path)
        self._sorter = sorter

    def process(self):
        '''
        Create the label directories and the links.
        '''
        # loop through the labels as generated by the sorter.
        # create the label directory.
        for file_set in self._sorter.collect_filenames():
            label_path = os.path.join(self._dst_path, str(file_set[0]))
            os.makedirs(label_path, exist_ok = True)
            # Loop through all the files in the label and create the links
            for file in file_set[1]:
                dst_path = os.path.join(label_path, file[1])
                src_path = os.path.join(file[0], file[1])
                # Make sure we look for a link and not a real file.
                if os.path.lexists(dst_path):
                    os.remove(dst_path)
                os.symlink(src_path, dst_path)

def main():
    sorter = ThetaSorter('../../../datax/gs_28x28', '*.png', 90, 45, 2, '{:05.1f}')
    linker = FileLinker('../../../datax/theta', sorter)
    linker.process()

if __name__ == '__main__':
    main()
